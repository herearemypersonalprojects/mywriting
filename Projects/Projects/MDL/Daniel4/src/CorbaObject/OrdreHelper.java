// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2005
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.3.2

package CorbaObject;

//
// IDL:CorbaObject/Ordre:1.0
//
final public class OrdreHelper
{
    public static void
    insert(org.omg.CORBA.Any any, Ordre val)
    {
        org.omg.CORBA.portable.OutputStream out = any.create_output_stream();
        write(out, val);
        any.read_value(out.create_input_stream(), type());
    }

    public static Ordre
    extract(org.omg.CORBA.Any any)
    {
        if(any.type().equivalent(type()))
            return read(any.create_input_stream());
        else
            throw new org.omg.CORBA.BAD_OPERATION();
    }

    private static org.omg.CORBA.TypeCode typeCode_;

    public static org.omg.CORBA.TypeCode
    type()
    {
        if(typeCode_ == null)
        {
            org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init();
            org.omg.CORBA.StructMember[] members = new org.omg.CORBA.StructMember[11];

            members[0] = new org.omg.CORBA.StructMember();
            members[0].name = "numeroParticulier";
            members[0].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_string);

            members[1] = new org.omg.CORBA.StructMember();
            members[1].name = "estUnAchat";
            members[1].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

            members[2] = new org.omg.CORBA.StructMember();
            members[2].name = "estAToutPrix";
            members[2].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_boolean);

            members[3] = new org.omg.CORBA.StructMember();
            members[3].name = "numeroSociete";
            members[3].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_string);

            members[4] = new org.omg.CORBA.StructMember();
            members[4].name = "quantiteDesiree";
            members[4].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[5] = new org.omg.CORBA.StructMember();
            members[5].name = "quantiteRealisee";
            members[5].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_long);

            members[6] = new org.omg.CORBA.StructMember();
            members[6].name = "montant";
            members[6].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_float);

            members[7] = new org.omg.CORBA.StructMember();
            members[7].name = "dEmission";
            members[7].type = DateStructHelper.type();

            members[8] = new org.omg.CORBA.StructMember();
            members[8].name = "dButoir";
            members[8].type = DateStructHelper.type();

            members[9] = new org.omg.CORBA.StructMember();
            members[9].name = "dRealisation";
            members[9].type = DateStructHelper.type();

            members[10] = new org.omg.CORBA.StructMember();
            members[10].name = "etat";
            members[10].type = orb.get_primitive_tc(org.omg.CORBA.TCKind.tk_string);

            typeCode_ = orb.create_struct_tc(id(), "Ordre", members);
        }

        return typeCode_;
    }

    public static String
    id()
    {
        return "IDL:CorbaObject/Ordre:1.0";
    }

    public static Ordre
    read(org.omg.CORBA.portable.InputStream in)
    {
        Ordre _ob_v = new Ordre();
        _ob_v.numeroParticulier = in.read_string();
        _ob_v.estUnAchat = in.read_boolean();
        _ob_v.estAToutPrix = in.read_boolean();
        _ob_v.numeroSociete = in.read_string();
        _ob_v.quantiteDesiree = in.read_long();
        _ob_v.quantiteRealisee = in.read_long();
        _ob_v.montant = in.read_float();
        _ob_v.dEmission = DateStructHelper.read(in);
        _ob_v.dButoir = DateStructHelper.read(in);
        _ob_v.dRealisation = DateStructHelper.read(in);
        _ob_v.etat = in.read_string();
        return _ob_v;
    }

    public static void
    write(org.omg.CORBA.portable.OutputStream out, Ordre val)
    {
        out.write_string(val.numeroParticulier);
        out.write_boolean(val.estUnAchat);
        out.write_boolean(val.estAToutPrix);
        out.write_string(val.numeroSociete);
        out.write_long(val.quantiteDesiree);
        out.write_long(val.quantiteRealisee);
        out.write_float(val.montant);
        DateStructHelper.write(out, val.dEmission);
        DateStructHelper.write(out, val.dButoir);
        DateStructHelper.write(out, val.dRealisation);
        out.write_string(val.etat);
    }
}
