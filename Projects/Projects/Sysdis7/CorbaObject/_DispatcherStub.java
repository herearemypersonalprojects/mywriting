// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2005
// IONA Technologies, Inc.
// Waltham, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.3.2

package CorbaObject;

//
// IDL:CorbaObject/Dispatcher:1.0
//
public class _DispatcherStub extends org.omg.CORBA.portable.ObjectImpl
                             implements Dispatcher
{
    private static final String[] _ob_ids_ =
    {
        "IDL:CorbaObject/Dispatcher:1.0",
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public static java.lang.Class _ob_opsClass = DispatcherOperations.class;

    //
    // IDL:CorbaObject/Dispatcher/annulerTache:1.0
    //
    public boolean
    annulerTache(int _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("annulerTache", true);
                    out.write_long(_ob_a0);
                    in = _invoke(out);
                    boolean _ob_r = in.read_boolean();
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("annulerTache", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    return _ob_self.annulerTache(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/obtenirResultatFinal:1.0
    //
    public byte[]
    obtenirResultatFinal(int _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("obtenirResultatFinal", true);
                    out.write_long(_ob_a0);
                    in = _invoke(out);
                    byte[] _ob_r = CorbaObject.DispatcherPackage.octetListHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("obtenirResultatFinal", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    return _ob_self.obtenirResultatFinal(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/commanderUnRendu:1.0
    //
    public int
    commanderUnRendu(byte[] _ob_a0,
                     int _ob_a1,
                     int _ob_a2)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("commanderUnRendu", true);
                    CorbaObject.DispatcherPackage.octetListHelper.write(out, _ob_a0);
                    out.write_long(_ob_a1);
                    out.write_long(_ob_a2);
                    in = _invoke(out);
                    int _ob_r = in.read_long();
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("commanderUnRendu", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    return _ob_self.commanderUnRendu(_ob_a0, _ob_a1, _ob_a2);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/synchronizeCommandeDeRendu:1.0
    //
    public int
    synchronizeCommandeDeRendu(byte[] _ob_a0,
                               int _ob_a1,
                               int _ob_a2,
                               int _ob_a3,
                               int _ob_a4,
                               int _ob_a5,
                               int _ob_a6,
                               int _ob_a7)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("synchronizeCommandeDeRendu", true);
                    CorbaObject.DispatcherPackage.octetListHelper.write(out, _ob_a0);
                    out.write_long(_ob_a1);
                    out.write_long(_ob_a2);
                    out.write_long(_ob_a3);
                    out.write_long(_ob_a4);
                    out.write_long(_ob_a5);
                    out.write_long(_ob_a6);
                    out.write_long(_ob_a7);
                    in = _invoke(out);
                    int _ob_r = in.read_long();
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("synchronizeCommandeDeRendu", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    return _ob_self.synchronizeCommandeDeRendu(_ob_a0, _ob_a1, _ob_a2, _ob_a3, _ob_a4, _ob_a5, _ob_a6, _ob_a7);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/obtenirEtatAvancement:1.0
    //
    public CorbaObject.DispatcherPackage.Informations
    obtenirEtatAvancement(int _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("obtenirEtatAvancement", true);
                    out.write_long(_ob_a0);
                    in = _invoke(out);
                    CorbaObject.DispatcherPackage.Informations _ob_r = CorbaObject.DispatcherPackage.InformationsHelper.read(in);
                    return _ob_r;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("obtenirEtatAvancement", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    return _ob_self.obtenirEtatAvancement(_ob_a0);
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/updateFragment:1.0
    //
    public void
    updateFragment(int _ob_a0,
                   int _ob_a1,
                   byte[] _ob_a2)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("updateFragment", true);
                    out.write_long(_ob_a0);
                    out.write_long(_ob_a1);
                    CorbaObject.DispatcherPackage.octetListHelper.write(out, _ob_a2);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("updateFragment", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.updateFragment(_ob_a0, _ob_a1, _ob_a2);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/setID:1.0
    //
    public void
    setID(int _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("setID", true);
                    out.write_long(_ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("setID", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.setID(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/saveNewDispatcher:1.0
    //
    public void
    saveNewDispatcher(String _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("saveNewDispatcher", true);
                    out.write_string(_ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("saveNewDispatcher", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.saveNewDispatcher(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/saveNewWorker:1.0
    //
    public void
    saveNewWorker(String _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("saveNewWorker", true);
                    out.write_string(_ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("saveNewWorker", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.saveNewWorker(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/saveNewClient:1.0
    //
    public void
    saveNewClient(String _ob_a0)
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("saveNewClient", true);
                    out.write_string(_ob_a0);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("saveNewClient", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.saveNewClient(_ob_a0);
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }

    //
    // IDL:CorbaObject/Dispatcher/dearLeaderAreUStillThere:1.0
    //
    public void
    dearLeaderAreUStillThere()
    {
        while(true)
        {
            if(!this._is_local())
            {
                org.omg.CORBA.portable.OutputStream out = null;
                org.omg.CORBA.portable.InputStream in = null;
                try
                {
                    out = _request("dearLeaderAreUStillThere", true);
                    in = _invoke(out);
                    return;
                }
                catch(org.omg.CORBA.portable.RemarshalException _ob_ex)
                {
                    continue;
                }
                catch(org.omg.CORBA.portable.ApplicationException _ob_aex)
                {
                    final String _ob_id = _ob_aex.getId();
                    in = _ob_aex.getInputStream();

                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception: " + _ob_id);
                }
                finally
                {
                    _releaseReply(in);
                }
            }
            else
            {
                org.omg.CORBA.portable.ServantObject _ob_so = _servant_preinvoke("dearLeaderAreUStillThere", _ob_opsClass);
                if(_ob_so == null)
                    continue;
                DispatcherOperations _ob_self = (DispatcherOperations)_ob_so.servant;
                try
                {
                    _ob_self.dearLeaderAreUStillThere();
                    return;
                }
                finally
                {
                    _servant_postinvoke(_ob_so);
                }
            }
        }
    }
}
