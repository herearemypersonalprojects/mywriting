import imageDisplay.Display;
import javax.swing.JFileChooser;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.TextEvent;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import CorbaObject.DispatcherPackage.Informations;
import Structure.Client;
import Structure.Utils;

import imageMerger.MyImageMerger;
import imageDisplay.Display;
/*
 * Interface.java
 *
 * Created on November 28, 2007, 2:31 PM
 */

/**
 *
 * @author  quocanh
 */
public class Interface extends javax.swing.JFrame {
    
	static Image image;
	static Client cli;
    static String filePov;
    int IDtest=-1;
    int width;
    int height;
    
    //MyImageMerger myImage;
    /** Creates new form Interface */
    
    public Interface() {
        initComponents();
        
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        btOpenFile = new javax.swing.JButton();
        btSendDemand = new javax.swing.JButton();
        btCancelDemand = new javax.swing.JButton();
        btRequest = new javax.swing.JButton();
        btDemandResult = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        txtFileName = new java.awt.TextField();
        txtID = new java.awt.TextField();
        txtWidth = new java.awt.TextField();
        txtHeight = new java.awt.TextField();
        txtStatus = new java.awt.TextField();
        lblFilePov = new java.awt.Label();

        btCancelDemand.setVisible(false);
        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Povray - Interface du client");
        btOpenFile.setText("Choisir un fichier Pov");
        btOpenFile.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOpenFileActionPerformed(evt);
            }
        });

        getContentPane().add(btOpenFile);
        btOpenFile.setBounds(30, 10, 168, 25);

        btSendDemand.setText("Envoyer la demande");
        btSendDemand.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btSendDemand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSendDemandActionPerformed(evt);
            }
        });

        getContentPane().add(btSendDemand);
        btSendDemand.setBounds(29, 40, 170, 25);

        btCancelDemand.setText("Annuler la demande");
        btCancelDemand.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btCancelDemand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelDemandActionPerformed(evt);
            }
        });

        getContentPane().add(btCancelDemand);
        btCancelDemand.setBounds(29, 70, 170, 25);

        btRequest.setText("Afficher l'etat");
        btRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRequestActionPerformed(evt);
            }
        });

        getContentPane().add(btRequest);
        btRequest.setBounds(30, 100, 170, 25);

        btDemandResult.setText("Demander le resultat");
        btDemandResult.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDemandResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDemandResultActionPerformed(evt);
            }
        });

        getContentPane().add(btDemandResult);
        btDemandResult.setBounds(30, 130, 170, 25);

        jLabel5.setText("Numero d'Identification de la tache");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(270, 20, 218, 15);

        jLabel1.setText("Nom de fichier");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 180, 91, 15);

        jLabel2.setText("Hauteur");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(430, 100, 47, 15);

        jLabel4.setText("L'etat du processus");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(360, 60, 121, 15);

        jLabel3.setText("Largeur");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(430, 140, 49, 15);

        jLabel6.setText("Informations en cours");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 210, 138, 15);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 230, 510, 78);

        txtFileName.setText("test.pov");
        txtFileName.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtFileNameTextValueChanged(evt);
            }
        });
        txtFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFileNameActionPerformed(evt);
            }
        });

        getContentPane().add(txtFileName);
        txtFileName.setBounds(444, 180, 90, 19);

        //txtID.setText(this.IDtest + "");
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.TextEvent evt) {
                actionPerformed(evt);
            }

			public void textValueChanged(TextEvent arg0) {
				// TODO Auto-generated method stub
				
			}

			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				
			}
        });

        getContentPane().add(txtID);
        txtID.setBounds(500, 20, 40, 19);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        
        txtWidth.setText("640");
        txtWidth.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtWidthTextValueChanged(evt);
            }
        });
        txtWidth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWidthActionPerformed(evt);
            }
        });

        getContentPane().add(txtWidth);
        txtWidth.setBounds(490, 140, 50, 19);

        txtHeight.setText("480");
        txtHeight.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                txtHeightTextValueChanged(evt);
            }
        });
        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        getContentPane().add(txtHeight);
        txtHeight.setBounds(490, 100, 50, 19);

        txtStatus.setEditable(false);
        txtStatus.setText("0%");
        getContentPane().add(txtStatus);
        txtStatus.setBounds(500, 60, 40, 19);

        getContentPane().add(lblFilePov);
        lblFilePov.setBounds(0, 0, 4, 19);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        height = new Integer (this.txtHeight.getText());
    }//GEN-LAST:event_txtHeightActionPerformed

    private void txtWidthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWidthActionPerformed
           width = new Integer (this.txtWidth.getText());
    }//GEN-LAST:event_txtWidthActionPerformed

    private void txtFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFileNameActionPerformed
        this.filePov = this.txtFileName.getText();
    }//GEN-LAST:event_txtFileNameActionPerformed

    private void txtHeightTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtHeightTextValueChanged
    }//GEN-LAST:event_txtHeightTextValueChanged

    private void txtWidthTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtWidthTextValueChanged
    }//GEN-LAST:event_txtWidthTextValueChanged

    private void txtFileNameTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_txtFileNameTextValueChanged

    	
    }//GEN-LAST:event_txtFileNameTextValueChanged

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDTextValueChanged
    	this.IDtest = Integer.valueOf(this.txtID.getText());
    	
    	
    	// Daniel a changé !
    }//GEN-LAST:event_txtIDTextValueChanged

    private void btRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRequestActionPerformed
    // TODO add your handling code here:
        
        
        this.txtStatus.setText(String.valueOf(cli.getDispatcherLeader().obtenirEtatAvancement(IDtest).percentageDone) + "%");
    }//GEN-LAST:event_btRequestActionPerformed

    private void btCancelDemandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelDemandActionPerformed
    // TODO add your handling code here:
        
    }//GEN-LAST:event_btCancelDemandActionPerformed

    private void btSendDemandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSendDemandActionPerformed
    // Verifier les donnees
        byte[] contenttodo = null;
        
        
       try{
        width = new Integer(this.txtWidth.getText()).intValue();
        height = new Integer(this.txtHeight.getText()).intValue();
       }
       catch (Exception e)
       {
    	   System.out.println("Attention, la largeur, hauteur doivent etre des entiers !");
    	   System.out.println("Attribution de valeurs par defaut !");
    	   
    	   width = 640;
    	   height = 480;
       }
        //Verifier les donnees
        if(width<=0 || height<=0)
        {
            System.out.println("Les dimensions sont invalides!");
            this.lblFilePov.setText("Les dimensions sont invalides!");
            return;
        }
        System.out.println("fichier cherche : " + this.filePov);
        
        
        contenttodo = Utils.getContentOfFile(this.filePov); 
        this.IDtest =cli.getDispatcherLeader().commanderUnRendu(contenttodo,  width, height);
        this.txtID.setText(String.valueOf(this.IDtest));
    }//GEN-LAST:event_btSendDemandActionPerformed

    private void btOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOpenFileActionPerformed
        //String filename = File.separator+"/home/quocanh/workspace/Sysdis7";
        
        try{
        JFileChooser fc = new JFileChooser();
        
        ExampleFileFilter filter = new ExampleFileFilter();       
        filter.addExtension("pov");        
        filter.setDescription("POVRAY Files");
        fc.setFileFilter(filter);
        // Open file dialog.
        fc.showOpenDialog(this);
        
        this.txtFileName.setText(fc.getSelectedFile().getName());
        this.filePov = fc.getSelectedFile().getPath();
        //System.out.println(this.filePov);
       // this.txtFileName.setText(new String(this.filePov));
        }catch(Exception ex){
            ex.getStackTrace();
        }
    }//GEN-LAST:event_btOpenFileActionPerformed
    
    private void btDemandResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDemandResultActionPerformed
 
    	
    	//System.out.println("on demande le ticket : " + this.IDtest);
    	byte[] finaldata = cli.getDispatcherLeader().obtenirResultatFinal(new Integer(txtID.getText()).intValue());
    	
    	Informations info = cli.getDispatcherLeader().obtenirEtatAvancement(new Integer(txtID.getText()).intValue());
    
    	jTextArea1.setText("La tache numéro : " + txtID.getText() + " a commencee le " + info.startingDate + " et c'est terminee le " + info.endingDate + "\n" + "Elle a commence a " + info.startingTime + " et a terminee a " + info.endingTime + "\n" + "Le temps total est donc : " + (info.endingTime - info.startingTime) + " seconde(s)" );
    	
    		if (finaldata == null)
    		{
    			// pas de résultat
    		}
    		else
    		{
    			
    			// on fait qque chose du résultat !
    			//BufferedOutputStream output;
    			try 
    			{
    				/*
					output = new 
				   	BufferedOutputStream(new FileOutputStream(filePov+".png"));
		           	output.write(finaldata,0,finaldata.length);
		           	output.flush();
		           	output.close();	
    				 */
    				//Afficher l'image`
    				
    				String filenamesaved= new String("Client-" + new Integer(txtID.getText()).intValue() + ".png"); 
    				Utils.writeContentToFile(finaldata, filenamesaved);
    				image = Toolkit.getDefaultToolkit ().getImage(filenamesaved); 
    				Thread th = new Thread(new NewThread());

    				th.start();
    				
    				} 
    			catch (Exception e) 
    			{
				// TODO Auto-generated catch block
				e.printStackTrace();
    			}
			
    		}
    	
    	
    }//GEN-LAST:event_btDemandResultActionPerformed
    
    public class NewThread implements Runnable
    	{ public void run()
    		{
    		   Display dis = new Display(image);
    		}
    	}
    		
    private boolean VerificationImage(){
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final Interface inter = new Interface();
    	
        java.awt.EventQueue.invokeLater(new Runnable() {
            
        	public void run() {
            	
                inter.setPreferredSize(new Dimension(563,340));
                inter.setMinimumSize(inter.getPreferredSize());
                inter.setVisible(true);
            }
        });
    	 cli = new Client();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelDemand;
    private javax.swing.JToggleButton btDemandResult;
    private javax.swing.JButton btOpenFile;
    private javax.swing.JButton btRequest;
    private javax.swing.JButton btSendDemand;
    private javax.swing.JButton btGetFormerResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.Label lblFilePov;
    private java.awt.TextField txtFileName;
    private java.awt.TextField txtHeight;
    private java.awt.TextField txtID;
    private java.awt.TextField txtStatus;
    private java.awt.TextField txtWidth;
    // End of variables declaration//GEN-END:variables
    
}
